% github.com/pirmd/cli/style
% pirmd
% 2019-07-09

# INTRODUCTION

This small piece of text aims at demonstrating and testing package 'style'.

It is writen by a __non-native__ English speaker, so pardon any faults.

All details can be found in 
[![GoDoc](https://godoc.org/github.com/pirmd/cli/style?status.svg)](https://godoc.org/github.com/pirmd/cli/style)

# EXAMPLES OF AVAILABLE STYLES

## Demonstrating Common Formatting

Section Introduction already demonstrates useful styles from package 'styles', 
this section completes them with most of the others possibilities.

Notably, package style can print in red or __green bold__ (if chosen style 
supports it).

Several levels of tabulations can be used:

    (Level 1) Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do 
    eiusmod tempor incididunt ut labore et dolore magna aliqua.

        (Level 2) Ut enim ad minim veniam, quis nostrud exercitation ullamco 
        laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor 
        in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla 
        pariatur.

                (Level 4) Excepteur sint occaecat cupidatat non proident, sunt 
                in culpa qui officia deserunt mollit anim id est laborum.

## Demonstrating Lists

It knows how to format *lists*: 

  * This very long and detailed sentence is here to demonstrate that list can be
    formatted and wrapped. It should hopefully be so long that it will not 
    fulfill the maximum number of authorized chars per line is reached.

  * It also can support sub-lists:

      + Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod 
        tempor incididunt ut labore et dolore magna aliqua.

      + Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi 
        ut aliquip ex ea commodo consequat. Duis aute irure dolor in 
        reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla 
        pariatur.

      + Excepteur sint occaecat cupidatat non proident, sunt in culpa qui 
        officia deserunt mollit anim id est laborum.

  * It is also possible to have a list's item that contains several paragraphs.

    For example, this paragraph that I made artificially long to verify that 
    wrapping is working correctly inside list

It can build __ordered *lists*__: 

     1. This very long and detailed sentence is here to demonstrate that list 
        can be formatted and wrapped. It should hopefully be so long that it 
        will not fulfill the maximum number of authorized chars per line is 
        reached.

     2. It also can support sub-lists:

         1. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do 
            eiusmod tempor incididunt ut labore et dolore magna aliqua.

         2. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris 
            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in 
            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla 
            pariatur.

         3. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui 
            officia deserunt mollit anim id est laborum.

      + It is also possible to mix with bullet list if you really want to.
It also knows how to *define* terms:

style
:A particular procedure by which something is done; a manner or way.

Even using Tabs:

    lorem ipsum
    :Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod 
    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo 
    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse 
    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat 
    non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

## Demonstrating Tables

Package 'style' supports drawing tables for most basic cases. Using Tab to align
tables should be done carefully as table way to guess optimum columns size does 
not take into account the tabulation

------------ --------------------------------- ---------------------------------
Column1      Column2                           Column3                          
------------ --------------------------------- ---------------------------------
Basic column This one is here                  Last but not least shows         
             to demonstrate                    __formating__ within the table   
             that colums with several lines                                     
             work too                                                           
                                                                                
             This second row is here to test   Also possibly a good opportunity 
             multi-lines rows format           to check escaping *sequence*     
------------ --------------------------------- ---------------------------------

It is also possible to use tabs with tables:

    ------------ ------------------------------- -------------------------------
    Column1      Column2                         Column3                        
    ------------ ------------------------------- -------------------------------
    Basic column This one is here                Last but not least shows       
                 to demonstrate                  __formating__ within the table 
                 that colums with several lines                                 
                 work too                                                       
                                                                                
                 This second row is here to test Also possibly a good           
                 multi-lines rows format         opportunity to check escaping  
                                                 *sequence*                     
    ------------ ------------------------------- -------------------------------
